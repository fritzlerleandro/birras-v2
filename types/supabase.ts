/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/beer_brands": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.beer_brands.id"];
          created_at?: parameters["rowFilter.beer_brands.created_at"];
          brand_name?: parameters["rowFilter.beer_brands.brand_name"];
          logo_url?: parameters["rowFilter.beer_brands.logo_url"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["beer_brands"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** beer_brands */
          beer_brands?: definitions["beer_brands"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.beer_brands.id"];
          created_at?: parameters["rowFilter.beer_brands.created_at"];
          brand_name?: parameters["rowFilter.beer_brands.brand_name"];
          logo_url?: parameters["rowFilter.beer_brands.logo_url"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.beer_brands.id"];
          created_at?: parameters["rowFilter.beer_brands.created_at"];
          brand_name?: parameters["rowFilter.beer_brands.brand_name"];
          logo_url?: parameters["rowFilter.beer_brands.logo_url"];
        };
        body: {
          /** beer_brands */
          beer_brands?: definitions["beer_brands"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/beer_categories": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.beer_categories.id"];
          category_name?: parameters["rowFilter.beer_categories.category_name"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["beer_categories"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** beer_categories */
          beer_categories?: definitions["beer_categories"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.beer_categories.id"];
          category_name?: parameters["rowFilter.beer_categories.category_name"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.beer_categories.id"];
          category_name?: parameters["rowFilter.beer_categories.category_name"];
        };
        body: {
          /** beer_categories */
          beer_categories?: definitions["beer_categories"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/beers": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.beers.id"];
          created_at?: parameters["rowFilter.beers.created_at"];
          beer_name?: parameters["rowFilter.beers.beer_name"];
          brand_id?: parameters["rowFilter.beers.brand_id"];
          price?: parameters["rowFilter.beers.price"];
          on_tap?: parameters["rowFilter.beers.on_tap"];
          sub_category?: parameters["rowFilter.beers.sub_category"];
          ibu?: parameters["rowFilter.beers.ibu"];
          abv?: parameters["rowFilter.beers.abv"];
          description?: parameters["rowFilter.beers.description"];
          category_id?: parameters["rowFilter.beers.category_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["beers"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** beers */
          beers?: definitions["beers"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.beers.id"];
          created_at?: parameters["rowFilter.beers.created_at"];
          beer_name?: parameters["rowFilter.beers.beer_name"];
          brand_id?: parameters["rowFilter.beers.brand_id"];
          price?: parameters["rowFilter.beers.price"];
          on_tap?: parameters["rowFilter.beers.on_tap"];
          sub_category?: parameters["rowFilter.beers.sub_category"];
          ibu?: parameters["rowFilter.beers.ibu"];
          abv?: parameters["rowFilter.beers.abv"];
          description?: parameters["rowFilter.beers.description"];
          category_id?: parameters["rowFilter.beers.category_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.beers.id"];
          created_at?: parameters["rowFilter.beers.created_at"];
          beer_name?: parameters["rowFilter.beers.beer_name"];
          brand_id?: parameters["rowFilter.beers.brand_id"];
          price?: parameters["rowFilter.beers.price"];
          on_tap?: parameters["rowFilter.beers.on_tap"];
          sub_category?: parameters["rowFilter.beers.sub_category"];
          ibu?: parameters["rowFilter.beers.ibu"];
          abv?: parameters["rowFilter.beers.abv"];
          description?: parameters["rowFilter.beers.description"];
          category_id?: parameters["rowFilter.beers.category_id"];
        };
        body: {
          /** beers */
          beers?: definitions["beers"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/profiles": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.profiles.id"];
          updated_at?: parameters["rowFilter.profiles.updated_at"];
          username?: parameters["rowFilter.profiles.username"];
          avatar_url?: parameters["rowFilter.profiles.avatar_url"];
          website?: parameters["rowFilter.profiles.website"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["profiles"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** profiles */
          profiles?: definitions["profiles"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.profiles.id"];
          updated_at?: parameters["rowFilter.profiles.updated_at"];
          username?: parameters["rowFilter.profiles.username"];
          avatar_url?: parameters["rowFilter.profiles.avatar_url"];
          website?: parameters["rowFilter.profiles.website"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.profiles.id"];
          updated_at?: parameters["rowFilter.profiles.updated_at"];
          username?: parameters["rowFilter.profiles.username"];
          avatar_url?: parameters["rowFilter.profiles.avatar_url"];
          website?: parameters["rowFilter.profiles.website"];
        };
        body: {
          /** profiles */
          profiles?: definitions["profiles"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  /** @description Beer Brands */
  beer_brands: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: character varying */
    brand_name?: string;
    /** Format: character varying */
    logo_url?: string;
  };
  /** @description Categories defined by bussines owner */
  beer_categories: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /** Format: character varying */
    category_name?: string;
  };
  /** @description Complete list of beers */
  beers: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: character varying */
    beer_name?: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `beer_brands.id`.<fk table='beer_brands' column='id'/>
     */
    brand_id?: number;
    /** Format: real */
    price?: number;
    /** Format: boolean */
    on_tap?: boolean;
    /** Format: character varying */
    sub_category?: string;
    /** Format: double precision */
    ibu?: number;
    /** Format: double precision */
    abv?: number;
    /** Format: text */
    description?: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `beer_categories.id`.<fk table='beer_categories' column='id'/>
     */
    category_id?: number;
  };
  profiles: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /** Format: timestamp with time zone */
    updated_at?: string;
    /** Format: text */
    username?: string;
    /** Format: text */
    avatar_url?: string;
    /** Format: text */
    website?: string;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: "params=single-object";
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: "count=none";
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description beer_brands */
  "body.beer_brands": definitions["beer_brands"];
  /** Format: bigint */
  "rowFilter.beer_brands.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.beer_brands.created_at": string;
  /** Format: character varying */
  "rowFilter.beer_brands.brand_name": string;
  /** Format: character varying */
  "rowFilter.beer_brands.logo_url": string;
  /** @description beer_categories */
  "body.beer_categories": definitions["beer_categories"];
  /** Format: bigint */
  "rowFilter.beer_categories.id": string;
  /** Format: character varying */
  "rowFilter.beer_categories.category_name": string;
  /** @description beers */
  "body.beers": definitions["beers"];
  /** Format: bigint */
  "rowFilter.beers.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.beers.created_at": string;
  /** Format: character varying */
  "rowFilter.beers.beer_name": string;
  /** Format: bigint */
  "rowFilter.beers.brand_id": string;
  /** Format: real */
  "rowFilter.beers.price": string;
  /** Format: boolean */
  "rowFilter.beers.on_tap": string;
  /** Format: character varying */
  "rowFilter.beers.sub_category": string;
  /** Format: double precision */
  "rowFilter.beers.ibu": string;
  /** Format: double precision */
  "rowFilter.beers.abv": string;
  /** Format: text */
  "rowFilter.beers.description": string;
  /** Format: bigint */
  "rowFilter.beers.category_id": string;
  /** @description profiles */
  "body.profiles": definitions["profiles"];
  /** Format: uuid */
  "rowFilter.profiles.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.profiles.updated_at": string;
  /** Format: text */
  "rowFilter.profiles.username": string;
  /** Format: text */
  "rowFilter.profiles.avatar_url": string;
  /** Format: text */
  "rowFilter.profiles.website": string;
}

export interface operations {}

export interface external {}
